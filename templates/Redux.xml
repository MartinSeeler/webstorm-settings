<templateSet group="Redux">
  <template name="redux-container" value="import React from 'react';&#10;import functional from 'react-functional';&#10;import {connect} from 'react-redux';&#10;&#10;const $ComponentName$ = () =&gt; &lt;div&gt;&lt;/div&gt;;&#10;&#10;const options = {&#10;  propTypes: {}&#10;};&#10;&#10;const mapStateToProps = () =&gt; {&#10;  return {};&#10;};&#10;&#10;const mapDispatchToProps = () =&gt; {&#10;  return {};&#10;};&#10;&#10;export default connect(mapStateToProps, mapDispatchToProps)(functional($ComponentName$, options));&#10;" description="Redux connected container" toReformat="true" toShortenFQNames="true">
    <variable name="ComponentName" expression="" defaultValue="ComponentName" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="redux-reducer" value="export const types = {};&#10;&#10;export const actions = {};&#10;&#10;export const initialState = {};&#10;&#10;export default (state = initialState,  action) =&gt; {&#10;  switch (action.type) {&#10;    default:&#10;      return state;&#10;  }&#10;};&#10;" description="Redux reducer" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="_lo" value="import * as _ from 'lodash';" description="Import Lodash" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="redux-component" value="import React from 'react';&#10;import functional from 'react-functional';&#10;&#10;const $ComponentName$ = () =&gt; &lt;div&gt;&lt;/div&gt;;&#10;&#10;const options = {&#10;  propTypes: {}&#10;};&#10;&#10;export default functional($ComponentName$, options);&#10;" description="Redux simple component" toReformat="true" toShortenFQNames="true">
    <variable name="ComponentName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rc" value="import React from 'react';&#10;import functional from 'react-functional';&#10;import {connect} from 'react-redux';&#10;&#10;const $ComponentName$ = () =&gt; &lt;div&gt;&lt;/div&gt;;&#10;&#10;const options = {&#10;  propTypes: {}&#10;};&#10;&#10;const mapStateToProps = () =&gt; {&#10;  return {};&#10;};&#10;&#10;const mapDispatchToProps = () =&gt; {&#10;  return {};&#10;};&#10;&#10;export default connect(mapStateToProps, mapDispatchToProps)(functional($ComponentName$, options));&#10;" description="Redux connected container" toReformat="true" toShortenFQNames="true">
    <variable name="ComponentName" expression="" defaultValue="ComponentName" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>